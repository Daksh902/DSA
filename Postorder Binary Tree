/*
For a given Binary Tree of integers, print the post-order traversal.
ALTIMAGE

The postorder traversal for the given binary tree will be 40 50 20 30 10
Input Format:
The first and the only line of input will contain the node data, all separated by a single space. Since -1 is used as an indication whether the left or right node data exist for root, it will not be a part of the node data.
Output Format:
The only line of output prints the post-order traversal of the given binary tree.
Constraints:
1 <= N <= 10^6
Where N is the total number of nodes in the binary tree.

Time Limit: 1 sec
*/



/*
	
	Following the structure used for Binary Tree
	
	class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T data) {
			this.data = data;
			this.left = null;
			this.right = null;
		}
	}

 */

public class Solution {

	public static void postOrder(BinaryTreeNode<Integer> root) {
		//Your code goes here
		if(root==null)
		return;

		  postOrder(root.left);
          postOrder(root.right);
          System.out.print(root.data+" ");
		
	}

}
